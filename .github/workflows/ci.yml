name: CI

on:
  push:
    branches: ["main", "renovate/*"]
    tags: ["*.*.*"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml', '**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: poetry install
        run: |
          pip install poetry
          poetry install --all-extras
      - run: poetry run pyright
      - run: poetry run ruff check yohane/
        if: always()

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml', '**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: poetry install
        run: |
          pip install poetry
          poetry install --all-extras
      - run: poetry publish --build
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dist
          path: dist/
